{
  "category": "Time length operations",
  "content": "from hetdesrun.component.registration import register\nfrom hetdesrun.datatypes import DataType\n\nimport pandas as pd\nimport numpy as np\n\n# ***** DO NOT EDIT LINES BELOW *****\n# These lines may be overwritten if component details or inputs/outputs change.\n@register(\n    inputs={\"data\": DataType.Any, \"d\": DataType.Integer},\n    outputs={\"interpolation\": DataType.Any},\n    component_name=\"Linear Interpolation numeric index\",\n    description=\"Calculates the linear interpolation for some distance\",\n    category=\"Time length operations\",\n    uuid=\"1d53dedc-9e4a-1ccc-4dfb-3e5059f89db8\",\n    group_id=\"1d53dedc-9e4a-1ccc-4dfb-3e5059f89db8\",\n    tag=\"1.0.0\"\n)\ndef main(*, data, d):\n    # entrypoint function for this component\n    # ***** DO NOT EDIT LINES ABOVE *****\n    \"\"\" Usage example:\n    >>> main(\n    ...     data=pd.Series(\n    ...             [10.0, 22.0, 18.0, 2.0],   \n    ...             index=pd.to_datetime([\"2019-08-01T15:20:10\", \"2019-08-01T15:20:11\", \"2019-08-01T15:20:14\", \"2019-08-01T15:20:16\"])\n    ...     ),\n    ...     frequency = \"s\",\n    ...     periods = -4\n    ... )[\"shifted\"]\n    2019-08-01 15:20:06    10.0\n    2019-08-01 15:20:07    22.0\n    2019-08-01 15:20:10    18.0\n    2019-08-01 15:20:12     2.0\n    dtype: float64\n    \"\"\"\n    # write your code here.\n\n    if data.empty:\n        return {\"interpolation\": data}\n    data_reindex = data.reindex(\n        pd.RangeIndex(data.index[0], data.index[-1], d).union(data.index)\n    )\n    data_reindex = data_reindex.interpolate(method=\"index\")\n    return {\n        \"interpolation\": data_reindex.reindex(\n            pd.RangeIndex(data.index[0], data.index[-1] + 1, d)\n        )\n    }\n",
  "description": "Calculates the linear interpolation for some distance",
  "documentation": "# Linear Index Interpolation\n\n## Description\nThe component calculates the linear interpolation of the input for some distance.\n\n## Inputs\n* **data** (Pandas Series or Pandas DataFrame): Indices must be Integer, entries numeric and data sorted by its index.\n* **d** (Integer): The distance between the indices of the interpolated **data**.\n\n## Outputs\n* **interpolation** (Pandas Series or Pandas DataFrame): The linear interpolation of **data**. \n\n## Details\nThe component calculates the linear interpolation of the input for some distance in the interval given by the smallest and biggest index of data.\n\n## Examples\nThe json input of a typical call of this component with a Pandas Series is\n```\n{\n\t\"data\": {\n                2: 1.2,\n                3: 7.2,\n                5: 2.8,\n                6: 4.8,\n\t\t\t\t9: 10.8\n\t}, \n\t\"d\": 2\n}\n```\nThe expected output is\n```\n\t\"interpolation\": {\n\t\t\t\t2.0: 1.2\n\t\t\t\t4.0: 5.0\n\t\t\t\t6.0: 4.8\n\t\t\t\t8.0: 8.8\n\t}\n```\n",
  "id": "1d53dedc-9e4a-1ccc-4dfb-3e5059f89db8",
  "io_interface": {
    "inputs": [
      {
        "data_type": "ANY",
        "id": "6af5afaf-96c3-fe84-6aa2-e692e4371b74",
        "name": "data"
      },
      {
        "data_type": "INT",
        "id": "ad7bf640-743e-c12a-8ce4-89c263257a9f",
        "name": "d"
      }
    ],
    "outputs": [
      {
        "data_type": "ANY",
        "id": "e3d348d4-bad5-7e7f-b4cd-85e510717326",
        "name": "interpolation"
      }
    ]
  },
  "name": "Linear Interpolation numeric index",
  "released_timestamp": "2022-02-09T17:33:29.043769+00:00",
  "revision_group_id": "1d53dedc-9e4a-1ccc-4dfb-3e5059f89db8",
  "state": "RELEASED",
  "test_wiring": {
    "input_wirings": [],
    "output_wirings": []
  },
  "type": "COMPONENT",
  "version_tag": "1.0.0"
}